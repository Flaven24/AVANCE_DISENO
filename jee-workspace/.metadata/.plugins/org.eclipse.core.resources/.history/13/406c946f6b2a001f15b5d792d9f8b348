package model;

import java.io.Serializable;
import javax.persistence.*;
import java.sql.Timestamp;
import java.util.List;


/**
 * The persistent class for the professor database table.
 * 
 */
@Entity
@NamedQuery(name="Professor.findAll", query="SELECT p FROM Professor p")
public class Professor implements Serializable {
	private static final long serialVersionUID = 1L;

	@Id
	private Integer idprofessor;

	private Boolean bactive;

	private String clastname;

	private String cname;

	private Timestamp dregist;

	//bi-directional many-to-one association to CruceCourseProfessor
	@OneToMany(mappedBy="professor")
	private List<CruceCourseProfessor> cruceCourseProfessors;

	//bi-directional many-to-one association to CruceUniversityProfessor
	@OneToMany(mappedBy="professor")
	private List<CruceUniversityProfessor> cruceUniversityProfessors;

	public Professor() {
	}

	public Integer getIdprofessor() {
		return this.idprofessor;
	}

	public void setIdprofessor(Integer idprofessor) {
		this.idprofessor = idprofessor;
	}

	public Boolean getBactive() {
		return this.bactive;
	}

	public void setBactive(Boolean bactive) {
		this.bactive = bactive;
	}

	public String getClastname() {
		return this.clastname;
	}

	public void setClastname(String clastname) {
		this.clastname = clastname;
	}

	public String getCname() {
		return this.cname;
	}

	public void setCname(String cname) {
		this.cname = cname;
	}

	public Timestamp getDregist() {
		return this.dregist;
	}

	public void setDregist(Timestamp dregist) {
		this.dregist = dregist;
	}

	public List<CruceCourseProfessor> getCruceCourseProfessors() {
		return this.cruceCourseProfessors;
	}

	public void setCruceCourseProfessors(List<CruceCourseProfessor> cruceCourseProfessors) {
		this.cruceCourseProfessors = cruceCourseProfessors;
	}

	public CruceCourseProfessor addCruceCourseProfessor(CruceCourseProfessor cruceCourseProfessor) {
		getCruceCourseProfessors().add(cruceCourseProfessor);
		cruceCourseProfessor.setProfessor(this);

		return cruceCourseProfessor;
	}

	public CruceCourseProfessor removeCruceCourseProfessor(CruceCourseProfessor cruceCourseProfessor) {
		getCruceCourseProfessors().remove(cruceCourseProfessor);
		cruceCourseProfessor.setProfessor(null);

		return cruceCourseProfessor;
	}

	public List<CruceUniversityProfessor> getCruceUniversityProfessors() {
		return this.cruceUniversityProfessors;
	}

	public void setCruceUniversityProfessors(List<CruceUniversityProfessor> cruceUniversityProfessors) {
		this.cruceUniversityProfessors = cruceUniversityProfessors;
	}

	public CruceUniversityProfessor addCruceUniversityProfessor(CruceUniversityProfessor cruceUniversityProfessor) {
		getCruceUniversityProfessors().add(cruceUniversityProfessor);
		cruceUniversityProfessor.setProfessor(this);

		return cruceUniversityProfessor;
	}

	public CruceUniversityProfessor removeCruceUniversityProfessor(CruceUniversityProfessor cruceUniversityProfessor) {
		getCruceUniversityProfessors().remove(cruceUniversityProfessor);
		cruceUniversityProfessor.setProfessor(null);

		return cruceUniversityProfessor;
	}

}